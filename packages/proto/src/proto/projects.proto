// projects.proto
syntax = "proto3";

import "common.proto";
import "google/protobuf/empty.proto";

// Enums
enum Runtime {
    UNSPECIFIED_RUNTIME = 0;
    NODEJS = 1;
    PYTHON = 2;
    PHP = 3;
}

// Types
message Framework {
    string frameworkId = 1;
    string icon = 2;
    string displayName = 3; 
    string defaultBuildCommand = 4;
    string defaultProductionCommand = 5;
    Runtime runtime = 6;
}

message Repository {
    string repositoryId = 1;
    string projectId = 2;
    string githubRepoId = 3;
    string githubRepoName = 4;
}

message Deployment {
    string deploymentId = 1;
    string commitHash = 2;
    string status = 3;
    string commitMessage = 4;
    string author = 5;
    string projectId = 6;
    string repositoryId = 7;
}

message Project {
    string projectId = 1;
    string name = 2;
    Framework framework = 3;
    string createdAt = 4;
    string updatedAt = 5; 
    Repository repository = 6;
    repeated EnviornmentVariables environmentVars = 7;
}

message EnviornmentVariables {
    string projectId = 1;
    string envName = 2;
    string envValue = 3;
}

message EnviornmentVariablesKeyValue {
    string envName = 1;
    string envValue = 2;
}

message GithubRepository {
    string githubRepoId = 1;
    string githubRepoName = 2;
    string githubRepoFullName = 3;
    string githubRepoURI = 4;
    string githubRepoDefaultBranch = 5;
    bool githubRepoPrivate = 6;
}

message GithubInstallation {
    string githubInstallationId = 1;
    string userId = 2;
    string githubUserName = 3;
    string createdAt = 4;
    string updatedAt = 5;
}

message ProjectUpdates {
    optional string name = 1;
    optional string domain = 2;
    optional string frameworkId = 3;
    optional string buildCommand = 4;
    optional string productionCommand = 5;
    optional string branch = 6;
}

// Requests
message CreateProjectRequest {
    User authUserData = 1;
    string name = 2;
    string githubRepoId = 3;
    string frameworkId = 4;
    string buildCommand = 5;
    string productionCommand = 6;
    string branch = 7;
    repeated EnviornmentVariablesKeyValue environmentVars = 8;
    string domain = 9;
}

message UpdateProjectRequest {
    User authUserData = 1;
    string projectId = 2;
    ProjectUpdates updates = 3;
}

message GetRepositoryRequest {
    User authUserData = 1;
    string projectId = 2;
}

message GetAllUserProjectsRequest {
    User authUserData = 1;
    int32 skip = 2;
    int32 limit = 3;
}

message DeleteProjectRequest {
    User authUserData = 1;
    string projectId = 2;
}

message GetProjectRequest {
    User authUserData = 1;
    string projectId = 2;
}

message GetAllDeploymentsRequest {
    User authUserData = 1;
    string projectId = 2;
    int32 skip = 3;
    int32 limit = 4;
}

message RedeployRequest {
    User authUserData = 1;
    string deploymentId = 2;
    string projectId = 3;
}

message DeleteDeploymentRequest {
    User authUserData = 1;
    string deploymentId = 2;
    string projectId = 3;
}

message GetDeploymentRequest {
    User authUserData = 1;
    string projectId = 2;
    string deploymentId = 3;
}

message UpsertEnvVarsRequest {
    User authUserData = 1;
    string projectId = 2;
    repeated EnviornmentVariablesKeyValue envs = 3;
}

message DeleteEnvVarsRequest {
    User authUserData = 1;
    string projectId = 2;
    string envName = 3;
}

message CreateRepositoryRequest {
    User authUserData = 1;
    string githubRepoId = 2;
    string projectId = 3;
}

message DeleteRepositoryRequest {
    User authUserData = 1;
    string projectId = 2;
}

message GetEnvVarsRequest {
    User authUserData = 1;
    string projectId = 2;
}

message GetUserGithubReposRequest {
    User authUserData = 1;
    int64 skip = 2;
    int64 limit = 3;
}

message GetGithubRepoRequest {
    User authUserData = 1;
    string githubRepoId = 2;
}

message GithubWebhookRequest {
    string payload = 1;
    string signature = 2;
    string event = 3;
    string action = 4;
}

message CreateGithubInstallationRequest {
    User authUserData = 1;
    string installation_id = 2;
}

// Responses
message ProjectResponse {
    int32 code = 1;
    string message = 2;
    Project res = 3;
}

message AllProjectsResponse {
    int32 code = 1;
    string message = 2;
    repeated Project res = 3;
}

message DeploymentResponse {
    int32 code = 1;
    string message = 2;
    Deployment res = 3;
}

message AllDeploymentsResponse {
    int32 code = 1;
    string message = 2;
    repeated Deployment res = 3;
}

message EnvVarsResponse {
    int32 code = 1;
    string message = 2;
    repeated EnviornmentVariables res = 3;
}

message UpsertEnvVarsResponse {
    int32 code = 1;
    string message = 2;
}

message RepositoryResponse {
    int32 code = 1;
    string message = 2;
    Repository res = 3;
}

message FrameworkResponse {
    int32 code = 1;
    string message = 2;
    repeated Framework res = 3;
}

message AllGithubReposResponse {
    int32 code = 1;
    string message = 2;
    repeated GithubRepository res = 3;
}

message GithubRepoResponse {
    int32 code = 1;
    string message = 2;
    GithubRepository res = 3;
}

message DeleteEnvVarsResponse {
    int32 code = 1;
    string message = 2;
    EnviornmentVariables res = 3;
}

message GetGithubRepoAccessTokenRequest {
    string githubRepoId = 1;
}

message GetGithubRepoAccessTokenResponse {
    int32 code = 1;
    string message = 2;
    string res = 3;
}

message GithubInstallationResponse {
    int32 code = 1;
    string message = 2;
    GithubInstallation res = 3;
}

// Service
service ProjectsService {
    // Project
    rpc CreateProject (CreateProjectRequest) returns (ProjectResponse);
    rpc GetProject (GetProjectRequest) returns (ProjectResponse);
    rpc GetAllUserProjects (GetAllUserProjectsRequest) returns (AllProjectsResponse);
    rpc UpdateProject (UpdateProjectRequest) returns (ProjectResponse);
    rpc DeleteProject (DeleteProjectRequest) returns (ProjectResponse);

    // Deployment
    rpc GetDeployment (GetDeploymentRequest) returns (DeploymentResponse);
    rpc GetAllDeployments (GetAllDeploymentsRequest) returns (AllDeploymentsResponse);
    rpc DeleteDeployment (DeleteDeploymentRequest) returns (DeploymentResponse);
    rpc Redeploy (RedeployRequest) returns (DeploymentResponse);

    // Environment Variables
    rpc UpsertEnvVars (UpsertEnvVarsRequest) returns (UpsertEnvVarsResponse);
    rpc DeleteEnvVars (DeleteEnvVarsRequest) returns (DeleteEnvVarsResponse);
    rpc GetEnvVars (GetEnvVarsRequest) returns (EnvVarsResponse);

    // Repository
    rpc GetRepository (GetRepositoryRequest) returns (RepositoryResponse);
    rpc CreateRepository (CreateRepositoryRequest) returns (RepositoryResponse);
    rpc DeleteRepository (DeleteRepositoryRequest) returns (RepositoryResponse);

    // Github Repository
    rpc GetUserGithubRepos (GetUserGithubReposRequest) returns (AllGithubReposResponse);
    rpc GetGithubRepo (GetGithubRepoRequest) returns (GithubRepoResponse);
    rpc GetGithubInstallation (BodyLessRequest) returns (GithubInstallationResponse);

    rpc GetFrameworks (BulkResourceRequest) returns (FrameworkResponse);

    //webhooks
    rpc GithubWebhook (GithubWebhookRequest) returns (google.protobuf.Empty);
    rpc CreateGithubInstallation (CreateGithubInstallationRequest) returns (google.protobuf.Empty);

    rpc GetGithubRepoAccessToken (GetGithubRepoAccessTokenRequest) returns (GetGithubRepoAccessTokenResponse);
}
