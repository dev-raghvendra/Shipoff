openapi: 3.0.3
info:
  title: GitHub Service API
  description: GitHub integration service for managing repositories and installations
  version: 1.0.0

servers:
  - url: http://localhost:8000/apis/v1/github
    description: Development server
  - url: https://api.shipoff.in/apis/v1/github
    description: Production server

security:
  - BearerAuth: []

paths:
  /repos:
    get:
      tags:
        - GitHub Repositories
      summary: Get user GitHub repositories
      description: Retrieve a list of repositories accessible to the user
      parameters:
        - name: skip
          in: query
          description: Number of records to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Repositories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGithubReposResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /repos/{repoId}:
    get:
      tags:
        - GitHub Repositories
      summary: Get a specific GitHub repository
      description: Retrieve details of a specific repository by its ID
      parameters:
        - name: repoId
          in: path
          required: true
          description: The ID of the GitHub repository
          schema:
            type: string
      responses:
        '200':
          description: Repository details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubRepoResponse'
        '400':
          description: Bad request - Invalid repository ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Repository does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /installation:
    get:
      tags:
        - GitHub Installation
      summary: Get GitHub installation details
      description: Retrieve details of the GitHub installation for the authenticated user
      responses:
        '200':
          description: Installation details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubInstallationResponse'
        '404':
          description: Not Found - Installation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /installation/callback:
    get:
      tags:
        - GitHub Installation
      summary: GitHub installation callback
      description: Handle GitHub App installation callback
      security: []
      parameters:
        - name: installation_id
          in: query
          required: true
          description: GitHub installation ID
          schema:
            type: string
        - name: setup_action
          in: query
          required: false
          description: Setup action from GitHub
          schema:
            type: string
            enum: [install, update]
      responses:
        '200':
          description: Installation callback processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Installation processed successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    GithubRepository:
      type: object
      properties:
        githubRepoId:
          type: string
        githubRepoName:
          type: string
        githubRepoFullName:
          type: string
        githubRepoURI:
          type: string
        githubRepoDefaultBranch:
          type: string
        githubRepoPrivate:
          type: boolean

    AllGithubReposResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Repositories fetched successfully
        res:
          type: array
          items:
            $ref: '#/components/schemas/GithubRepository'

    GithubRepoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Repository fetched successfully
        res:
          $ref: '#/components/schemas/GithubRepository'

    GithubInstallation:
      type: object
      properties:
        githubInstallationId:
          type: string
        userId:
          type: string
        githubUserName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    GithubInstallationResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Installation fetched successfully
        res:
          $ref: '#/components/schemas/GithubInstallation'

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Error message
        res:
          type: object
          nullable: true