openapi: 3.0.3
info:
  title: Webhook Service API
  description: Webhook service for handling external webhook events
  version: 1.0.0

servers:
  - url: http://localhost:8000/apis/v1/webhooks
    description: Development server
  - url: https://api.shipoff.in/apis/v1/webhooks
    description: Production server

paths:
  /github:
    post:
      tags:
        - GitHub Webhooks
      summary: GitHub webhook
      description: Handle GitHub webhook events (push, pull request, etc.)
      security: []
      parameters:
        - name: X-GitHub-Event
          in: header
          description: GitHub event type
          required: true
          schema:
            type: string
            example: push
        - name: X-GitHub-Delivery
          in: header
          description: GitHub delivery ID
          required: false
          schema:
            type: string
            example: 12345678-1234-1234-1234-123456789012
        - name: X-Hub-Signature-256
          in: header
          description: GitHub webhook signature for verification
          required: true
          schema:
            type: string
            example: sha256=abc123def456...
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: GitHub webhook payload (raw JSON)
              example: 
                ref: "refs/heads/main"
                before: "abc123def456"
                after: "def456abc123"
                repository:
                  id: 123456789
                  name: "my-repo"
                  full_name: "user/my-repo"
                commits:
                  - id: "abc123def456"
                    message: "Fix authentication bug"
                    author:
                      name: "John Doe"
                      email: "john@example.com"
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Webhook processed successfully
        '400':
          description: Bad request - Invalid payload or signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity - Unsupported event type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator:
    post:
      tags:
        - Orchestrator Webhooks
      summary: Orchestrator webhook
      description: Handle orchestrator webhook events for container and deployment status updates
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Orchestrator webhook payload
              properties:
                event:
                  type: string
                  example: deployment.completed
                  enum: [deployment.started, deployment.completed, deployment.failed, container.started, container.stopped]
                payload:
                  type: object
                  description: Event-specific payload data
                  example:
                    deploymentId: "deploy_123456"
                    projectId: "project_789012"
                    status: "success"
                    message: "Deployment completed successfully"
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Orchestrator webhook processed successfully
        '400':
          description: Bad request - Invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity - Unsupported event type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Error message
        res:
          type: object
          nullable: true

    # Example webhook payload schemas for common events
    PushWebhookPayload:
      type: object
      description: Example payload for push events
      properties:
        ref:
          type: string
          example: refs/heads/main
        before:
          type: string
          example: abc123def456
        after:
          type: string
          example: def456abc123
        repository:
          type: object
          properties:
            id:
              type: integer
              example: 123456789
            name:
              type: string
              example: my-repo
            full_name:
              type: string
              example: user/my-repo
        commits:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: abc123def456
              message:
                type: string
                example: Fix authentication bug
              author:
                type: object
                properties:
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john@example.com

    PullRequestWebhookPayload:
      type: object
      description: Example payload for pull request events
      properties:
        action:
          type: string
          example: opened
        number:
          type: integer
          example: 42
        pull_request:
          type: object
          properties:
            id:
              type: integer
              example: 987654321
            title:
              type: string
              example: Add new feature
            body:
              type: string
              example: This PR adds a new feature...
            state:
              type: string
              example: open
            head:
              type: object
              properties:
                ref:
                  type: string
                  example: feature-branch
                sha:
                  type: string
                  example: abc123def456
            base:
              type: object
              properties:
                ref:
                  type: string
                  example: main
                sha:
                  type: string
                  example: def456abc123
        repository:
          type: object
          properties:
            id:
              type: integer
              example: 123456789
            name:
              type: string
              example: my-repo
            full_name:
              type: string
              example: user/my-repo

    OrchestratorWebhookPayload:
      type: object
      description: Example payload for orchestrator events
      properties:
        event:
          type: string
          example: deployment.completed
        payload:
          type: object
          properties:
            deploymentId:
              type: string
              example: deploy_123456
            projectId:
              type: string
              example: project_789012
            status:
              type: string
              example: success
            message:
              type: string
              example: Deployment completed successfully
            timestamp:
              type: string
              format: date-time
              example: "2024-01-15T10:30:00Z"